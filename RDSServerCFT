{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC RDS SQL EC2 Stack",
    "Parameters": {
        "VpcBlock": {
            "Type": "String",
            "Default": "10.0.0.0/16",
            "Description": "The CIDR range for the VPC"
        },
        "Subnet1Block": {
            "Type": "String",
            "Default": "10.0.1.0/24",
            "Description": "CidrBlock for Subnet 1 within the VPC"
        },
        "Subnet2Block" : {
            "Type": "String",
            "Default": "10.0.2.0/24",
            "Description": "CidrBlock for Subnet 2 within the VPC"
        },
        "Subnet3Block" : {
            "Type": "String",
            "Default": "10.0.3.0/24",
            "Description": "CidrBlock for Subnet 3 within the VPC"
        },
        "AMIID":{
            "Type": "String",
            "Default":"ami-b70554c8",
            "Description":"AMI ID for the Instance"
        },
        "InstanceType":{
            "Type":"String",
            "Default":"t2.micro",
            "Description":"Instance Type to be launched"
        },
        "SSHKey":{
            "Type":"String",
            "Default":"FirstKeyPair",
            "Description":"The SSH Key to SSH into the instance"
        },
        "InstanceClass":{
            "Type":"String",
            "Default":"db.t2.medium",
            "Description":"The Instance type for your MySQL server"
        },
        "StorageType":{
            "Type":"String",
            "Default":"gp2",
            "Description":"The Storage type for your MySQL server"
        },
        "Storage":{
            "Type":"String",
            "Default":"100",
            "Description":"The amount of storage space needed in GB"
        },
        "PortNumber":{
            "Type":"String",
            "Default":"3306",
            "Description":"The port to be exposed for your MySQL server"
        },
        "Username":{
            "Type":"String",
            "Default":"SandeepRajanP",
            "Description":"Username for MySQL server"
        },
        "Password":{
            "Type":"String",
            "Default":"qwerty12345",
            "Description":"Password for MySQL server"
        }               
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "VPC Network Configuration"
                    },
                    "Parameters": [
                        "VpcBlock",
                        "Subnet1Block",
                        "Subnet2Block",
                        "Subnet3Block"                        
                    ]
                }
            ]
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "EC2 Configuration"
                    },
                    "Parameters": [
                        "AMIID",
                        "InstanceType",
                        "SSHKey"
                    ]
                }
            ]
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "RDS Instance Configuration"
                    },
                    "Parameters": [
                        "StorageType",
                        "InstanceClass",
                        "Username",
                        "Password",
                        "Storage",
                        "PortNumber"
                    ]
                }
            ]
        }
    },
    "Resources": {
        "MyDB" : 
        {
         "DependsOn":"Subnet1"
         "Type" : "AWS::RDS::DBInstance",
         "DeletionPolicy" : "Snapshot",  
         "Properties" :
         {
           "Engine" : "mysql",
           "EngineVersion":"5.7.21",
           "StorageType":{"Ref":"StorageType"},
           "DBInstanceClass" : {"Ref":"InstanceClass"},
           "DBInstanceIdentifier" : "MySQLRDSInstance",
           "MasterUsername" : {"Ref":"Username"},
           "MasterUserPassword" : {"Ref":"Password"},
           "BackupRetentionPeriod":"7",
           "AllocatedStorage":{"Ref":"Storage"},
           "AllowMajorVersionUpgrade" : "true",
           "AutoMinorVersionUpgrade" : "true",
           "CopyTagsToSnapshot" : "true",  
           "DBName" : "MySQLDatabase",
           "VPCSecurityGroups" : [{"Ref":"DBSecurityGroup"}],
           "DBSubnetGroupName" : {"Ref":"DBSubnetGroup"},
           "Port" : {"Ref":"PortNumber"},
           "PubliclyAccessible" : "false",
           "KmsKeyId" :  { "Ref" : "MyKey"},
           "StorageEncrypted" : "true",
           "Tags": [
               {
                   "Key": "Name",
                   "Value": "VPCforRDSDBInstance" 
               },
               {
                   "Key": "EmailID",
                   "Value": "sandeeprajan.p@quantiphi.com" 
               },
               {
                   "Key": "Username",
                   "Value": "SandeepRajan P"   
               },
               {
                   "Key": "Project",
                   "Value": "Applied_AI_AWS_LM"
               }
           ] 
         }
        },
        "MyKey" : {
          "Type" : "AWS::KMS::Key",
          "Properties" : {
            "KeyPolicy" : {
              "Version": "2012-10-17",
              "Id": "key-default-1",
              "Statement": [
                {
                  "Sid": "Enable IAM User Permissions",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": { "Fn::Join" : ["" , ["arn:aws:iam::", {"Ref" : "AWS::AccountId"} ,":root" ]] }
                  },
                  "Action": "kms:*",
                  "Resource": "*"
                }
              ]
            }
          }
        },
        "DBSubnetGroup" : {
         "Type" : "AWS::RDS::DBSubnetGroup",
         "Properties" : {
            "DBSubnetGroupDescription" : "PrivateVPCGroup",
            "SubnetIds" : [ {"Ref":"Subnet2"} ,{"Ref":"Subnet3"}],
         }
        },
        "EC2Data":{
            "Type": "AWS::EC2::Instance",
            "Properties":{
              "BlockDeviceMappings" : [
               {
                  "DeviceName" : "/dev/xvda",
                  "Ebs" : {
                     "VolumeType" : "io1",
                     "Iops" : "400",
                     "DeleteOnTermination" : "true",
                     "VolumeSize" : "20"
                  }
               }
              ],
              "DisableApiTermination" : "false",
              "EbsOptimized" : "false",
              "IamInstanceProfile" : {"Ref":"InstanceProfile"},
              "ImageId" : {"Ref":"AMIID"},
              "InstanceInitiatedShutdownBehavior" : "stop",
              "InstanceType" : {"Ref":"InstanceType"},
              "KeyName" : {"Ref":"SSHKey"},
              "Monitoring" : "false",
              "NetworkInterfaces": [ {
                  "AssociatePublicIpAddress": "true",
                  "DeviceIndex": "0",
                  "GroupSet": [{ "Ref" : "VPCSecurityGroup" }],
                  "SubnetId": { "Ref" : "Subnet1" }
               }],
              "Tags": [
                    {
                        "Key": "Name",
                        "Value": "VPCforRDSDBInstance" 
                    },
                    {
                        "Key": "EmailID",
                        "Value": "sandeeprajan.p@quantiphi.com" 
                    },
                    {
                        "Key": "Username",
                        "Value": "SandeepRajan P"   
                    },
                    {
                        "Key": "Project",
                        "Value": "Applied_AI_AWS_LM"
                    }
                ]
           }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VpcBlock"
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "VPCforRDSDBInstance" 
                    },
                    {
                        "Key": "EmailID",
                        "Value": "sandeeprajan.p@quantiphi.com" 
                    },
                    {
                        "Key": "Username",
                        "Value": "SandeepRajan P"   
                    },
                    {
                        "Key": "Project",
                        "Value": "Applied_AI_AWS_LM"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "NATGateway": {
            "DependsOn":"Subnet1RouteTableAssociation",
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : {"Fn::GetAtt" : ["ElasticIP", "AllocationId"]},
                "SubnetId" : {"Ref":"Subnet1"}
            }
        },
        "ElasticIP" : {
          "Type" : "AWS::EC2::EIP",
          "Properties" : {
            "Domain" : {"Ref":"VPC"}
          }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public Subnet with Internet Gateway"
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "RouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private Subnet with NAT Gateway"
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "Route": {
            "DependsOn": "Subnet1RouteTableAssociation",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "Route2": {
            "DependsOn": "Subnet3RouteTableAssociation",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable2"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "Subnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "Subnet1Block"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Subnet1"
                        }
                    }
                ]
            }
        },
        "Subnet2":{
            "Type": "AWS::EC2::Subnet",
            "Properties":{
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref":"Subnet2Block"
                },
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Subnet2"
                        }
                    }
                ]
            }
        },
        "Subnet3":{
            "Type": "AWS::EC2::Subnet",
            "Properties":{
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref":"Subnet3Block"
                },
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Subnet3"
                        }
                    }
                ]
            }
        },
        "Subnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet1"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "Subnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet2"
                },
                "RouteTableId": {
                    "Ref": "RouteTable2"
                }
            }
        },
        "Subnet3RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet3"
                },
                "RouteTableId": {
                    "Ref": "RouteTable2"
                }
            }
        },
        "VPCSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Cluster communication with worker nodes",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp" : "0.0.0.0/0"
                },
                {
                "IpProtocol" : "tcp",
                "FromPort" : "22",
                "ToPort" : "22",
                "CidrIp" : "0.0.0.0/0"
                }],
                "SecurityGroupEgress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp" : "0.0.0.0/0"
                },
                {
                "IpProtocol" : "tcp",
                "FromPort" : "22",
                "ToPort" : "22",
                "CidrIp" : "0.0.0.0/0"
                }]
            }
        },
        "DBSecurityGroup": {
            "DependsOn":"Subnet1",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Cluster communication with worker nodes",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "3306",
                "ToPort" : "3306",
                "CidrIp" : {"Ref":"Subnet1"}
                }],
                "SecurityGroupEgress" : [
                {
                "IpProtocol" : "tcp",
                "FromPort" : "3306",
                "ToPort" : "3306",
                "CidrIp" : {"Ref":"Subnet1"}
                }]
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            }
        },
        "InstanceRole": {
            "Type": "AWS::IAM::Role",
              "Properties": {
                "RoleName":"RDSFullAccess",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "RDSFullAcess",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "*",
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        }
                    },
                    {   
                        "PolicyName": "CloudWatchLog",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        }
                    }
                ]
            }
        }
    }
}